{"version":3,"file":"react-native-slack-emoji.js","sources":["../src/components/picker/style.js","../src/components/picker/search-bar.js","../src/utils/index.js","../src/components/picker/search-content.js","../src/utils/data.js","../src/utils/store.js","../src/components/picker/category-content.js","../src/components/picker/picker-modal.js","../src/components/picker/index.js"],"sourcesContent":["import { StyleSheet, Dimensions } from 'react-native';\n\nconst { width } = Dimensions.get('window');\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  picker: {\n    marginBottom: 5,\n    marginRight: 7,\n    height: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emojiPicker: {\n    borderRadius: 15,\n    borderWidth: 1,\n    borderColor: '#E9E7E7',\n    flexDirection: 'row',\n    backgroundColor: '#E9E7E7',\n  },\n  emojiPickerSelected: {\n    backgroundColor: '#D8E3EF',\n    borderColor: '#21243B',\n  },\n  emoji: {\n    marginHorizontal: 10,\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#0063a8',\n  },\n  pickerIcon: {\n    marginHorizontal: 15,\n    fontSize: 16,\n    color: '#5f5f5f',\n  },\n  searchBarWrapper: {\n    flex: 0.1,\n    minHeight: 30,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n  },\n  searchIcon: {\n    width: 20,\n    height: 20,\n    fontSize: 20,\n    color: '#888888',\n  },\n  searchBarInput: {\n    fontSize: 14,\n    flex: 1,\n  },\n  cancel: {\n    paddingHorizontal: 5,\n    fontSize: 16,\n    color: '#5f5f5f',\n  },\n  categoryWrapper: {\n    flex: 0.8,\n    paddingHorizontal: 10,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#b7b7b7',\n  },\n  emojiWrapper: {\n    flexWrap: 'wrap',\n  },\n  searchRow: {\n    marginLeft: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 40,\n    borderBottomWidth: 0.3,\n    borderBottomColor: '#b7b7b7',\n  },\n  searchEmoji: {\n    paddingRight: 10,\n    fontSize: 14,\n  },\n  searchEmojiText: {\n    fontSize: 14,\n    color: '#939393',\n    fontWeight: '600',\n    paddingRight: 25,\n  },\n  emptySearchWrapper: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 30,\n  },\n  emptySearchText: {\n    fontSize: 16,\n    color: '#b7b7b7',\n  },\n  categoryHeader: {\n    flexDirection: 'column',\n    backgroundColor: '#ffffff',\n    justifyContent: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n  },\n  categoryHeaderText: {\n    fontWeight: '600',\n    fontSize: 14,\n    color: '#939393',\n  },\n  categoryContent: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  categoryEmojiWrapper: {\n    borderRadius: 10,\n  },\n  categoryEmojiText: {\n    marginHorizontal: 6,\n    marginVertical: 5,\n    fontSize: 30,\n  },\n  categoryEmojiImage: {\n    marginHorizontal: 6,\n    marginVertical: 5,\n    resizeMode: 'contain',\n    height: 30,\n    width: 30,\n  },\n  bottomPicker: {\n    height: 50,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    borderTopWidth: 0.05,\n    borderTopColor: '#b7b7b7',\n  },\n  category: {\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: width / 10,\n  },\n  categoryIcon: {\n    fontSize: 30,\n    color: '#888888',\n  },\n});\n","import React from 'react';\nimport {\n  View, TextInput, TouchableOpacity, Text,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport style from './style';\n\nfunction SearchBar({\n  onChangeText, placeholder, placeholderTextColor, cancel,\n}) {\n  return (\n    <View style={style.searchBarWrapper}>\n      <Ionicons name=\"ios-search\" style={style.searchIcon} />\n      <TextInput\n        autoFocus\n        style={style.searchBarInput}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        placeholderTextColor={placeholderTextColor}\n      />\n      <TouchableOpacity onPress={cancel}>\n        <Text style={style.cancel}>Cancel</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nSearchBar.defaultProps = {\n  placeholder: 'Search',\n  placeholderTextColor: '#b7b7b7',\n};\n\nSearchBar.propTypes = {\n  onChangeText: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  cancel: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","/*eslint-disable*/\nconst charFromUtf16 = utf16 => String.fromCodePoint(...utf16.split('-').map(u => `0x${u}`));\n\nfunction deepMerge(a, b) {\n  const o = {};\n\n  for (const key in a) {\n    const originalValue = a[key];\n\n\n    let value = originalValue;\n\n    if (b.hasOwnProperty(key)) {\n      value = b[key];\n    }\n\n    if (typeof value === 'object') {\n      value = deepMerge(originalValue, value);\n    }\n\n    o[key] = value;\n  }\n\n  return o;\n}\n\nexport {\n  charFromUtf16,\n  deepMerge,\n};\n","import React from 'react';\nimport {\n  ScrollView, Text, TouchableHighlight, View, Keyboard,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport { charFromUtf16 } from '../../utils';\n\nimport style from './style';\n\nfunction SearchContent({\n  onSelect, emojis, data, i18n, searchText,\n}) {\n  if (!emojis.length) {\n    return (\n      <View style={style.emptySearchWrapper}>\n        <Text style={style.emptySearchText}>{i18n.notFound}</Text>\n        <Text style={[style.emptySearchText, { fontWeight: '600' }]}>{`\"${searchText}\"`}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView keyboardShouldPersistTaps=\"handled\" style={{ flex: 0.8 }}>\n      {emojis.map((filteredEmoji) => {\n        const emoji = charFromUtf16(data.emojis[filteredEmoji].unified);\n        return (\n          <TouchableHighlight\n            key={filteredEmoji}\n            underlayColor=\"blue\"\n            onPress={() => { Keyboard.dismiss(); onSelect(emoji, filteredEmoji, data.emojis[filteredEmoji]); }}\n          >\n            <View style={style.searchRow}>\n              <Text style={style.searchEmoji}>{emoji}</Text>\n              <Text style={style.searchEmojiText} numberOfLines={1}>\n                {`:${filteredEmoji}:`}\n              </Text>\n            </View>\n          </TouchableHighlight>\n        );\n      })}\n    </ScrollView>\n  );\n}\n\nSearchContent.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  emojis: PropTypes.array.isRequired,\n  data: PropTypes.object.isRequired,\n  i18n: PropTypes.object.isRequired,\n  searchText: PropTypes.string.isRequired,\n};\n\nexport default SearchContent;\n","/* eslint-disable */\nconst mapping = {\n  name: 'a',\n  unified: 'b',\n  non_qualified: 'c',\n  has_img_apple: 'd',\n  has_img_google: 'e',\n  has_img_twitter: 'f',\n  has_img_emojione: 'g',\n  has_img_facebook: 'h',\n  has_img_messenger: 'i',\n  keywords: 'j',\n  sheet: 'k',\n  emoticons: 'l',\n  text: 'm',\n  short_names: 'n',\n  added_in: 'o',\n};\n\nconst buildSearch = (emoji) => {\n  const search = [];\n\n  const addToSearch = (strings, split) => {\n    if (!strings) {\n      return;\n    }\n\n    (Array.isArray(strings) ? strings : [strings]).forEach((string) => {\n      (split ? string.split(/[-|_|\\s]+/) : [string]).forEach((s) => {\n        s = s.toLowerCase();\n\n        if (search.indexOf(s) === -1) {\n          search.push(s);\n        }\n      });\n    });\n  };\n\n  addToSearch(emoji.short_names, true);\n  addToSearch(emoji.name, true);\n  addToSearch(emoji.keywords, false);\n  addToSearch(emoji.emoticons, false);\n\n  return search.join(',');\n};\n\nconst uncompress = (data) => {\n  data.compressed = false;\n\n  for (const id in data.emojis) {\n    const emoji = data.emojis[id];\n\n    for (const key in mapping) {\n      emoji[key] = emoji[mapping[key]];\n      delete emoji[mapping[key]];\n    }\n\n    if (!emoji.short_names) emoji.short_names = [];\n    emoji.short_names.unshift(id);\n\n    emoji.sheet_x = emoji.sheet[0];\n    emoji.sheet_y = emoji.sheet[1];\n    delete emoji.sheet;\n\n    if (!emoji.text) emoji.text = '';\n\n    if (!emoji.added_in) emoji.added_in = 6;\n    emoji.added_in = emoji.added_in.toFixed(1);\n\n    emoji.search = buildSearch(emoji);\n  }\n};\n\nexport { buildSearch, uncompress };\n","import { AsyncStorage } from 'react-native';\n\nconst DEFAULTS = [\n  '+1',\n  'grinning',\n  'kissing_heart',\n  'heart_eyes',\n  'laughing',\n  'stuck_out_tongue_winking_eye',\n  'sweat_smile',\n  'joy',\n  'scream',\n  'disappointed',\n  'unamused',\n  'weary',\n  'sob',\n  'sunglasses',\n  'heart',\n];\n\nconst KEY = 'react-native-slack-emoji/RECENT';\n\nconst MAX_RECENT_LENGTH = 15;\n\nlet items; let\n  initialized;\n\nasync function init() {\n  initialized = true;\n  const storageItems = await AsyncStorage.getItem(KEY);\n  if (!storageItems) {\n    items = DEFAULTS;\n    await AsyncStorage.setItem(KEY, JSON.stringify(items));\n  } else {\n    items = JSON.parse(storageItems);\n  }\n}\n\nasync function addEmoji(emoji) {\n  if (!initialized) {\n    await init();\n  }\n  const updatedArray = [...items];\n  const emojiIndex = updatedArray.indexOf(emoji);\n  if (emojiIndex !== -1) {\n    updatedArray.unshift(updatedArray.splice(emojiIndex, 1)[0]);\n  } else {\n    updatedArray.unshift(emoji);\n  }\n  items = updatedArray.slice(0, MAX_RECENT_LENGTH);\n  await AsyncStorage.setItem(KEY, JSON.stringify(items));\n  return items;\n}\n\nasync function getEmoji() {\n  if (!initialized) {\n    await init();\n  }\n  return items;\n}\n\nexport { addEmoji, getEmoji };\n","/* eslint-disable no-restricted-syntax */\nimport React from 'react';\nimport {\n  FlatList, Image, Text, TouchableHighlight, View, Keyboard,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport { charFromUtf16 } from '../../utils';\n\nimport style from './style';\nimport { getEmoji } from '../../utils/store';\n\nconst colors = ['#fabfff', '#aee0ff', '#abe981', '#f8ef55'];\n\nconst icons = {\n  recent: 'ios-timer',\n  people: 'ios-happy',\n  nature: 'ios-leaf',\n  foods: 'ios-beaker',\n  activity: 'ios-american-football',\n  places: 'ios-airplane',\n  objects: 'ios-bulb',\n  symbols: 'ios-heart-empty',\n  flags: 'ios-flag',\n  custom: 'ios-code',\n};\n\nclass CategoryContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.flatListRef = React.createRef();\n    this.state = {\n      list: [],\n      stickyHeaderIndices: [],\n      randomColor: colors[0],\n      activeIndex: 0,\n    };\n  }\n\n  async componentDidMount() {\n    let stickyIndex = 0;\n    const list = [];\n    const stickyHeaderIndices = [];\n    const { categories, i18n } = this.props;\n    const categoryKeys = Object.keys(i18n.categories);\n\n    let recentCategory = categories.filter(({ id }) => id === 'recent')[0];\n    const recentEmojis = await getEmoji();\n    if (recentCategory) {\n      recentCategory.emojis = recentEmojis;\n    } else {\n      recentCategory = { id: 'recent', name: 'Recent', emojis: recentEmojis };\n    }\n    categories.push(recentCategory);\n\n    for (const value of categoryKeys) {\n      const filteredValues = categories.filter(({ id }) => id === value)[0];\n      const emojis = filteredValues ? filteredValues.emojis : [];\n      const custom = value === 'custom';\n      list.push({\n        content: value, header: true, index: stickyIndex, custom,\n      });\n      list.push({\n        content: emojis, header: false, index: stickyIndex + 1, custom,\n      });\n      stickyHeaderIndices.push(stickyIndex);\n\n      stickyIndex += 2;\n    }\n    this.setState({ list, stickyHeaderIndices });\n  }\n\n  _keyExtractor = (item, index) => `${item.index} + ${index}`;\n\n  randomColor = () => {\n    const index = Math.floor(colors.length * Math.random());\n    this.setState({ randomColor: colors[index] });\n  }\n\n  onViewableItemsChanged = ({ viewableItems }) => {\n    if (viewableItems.length) {\n      const { index } = viewableItems[0];\n      if (index % 2 === 0) {\n        this.setState({ activeIndex: index });\n      }\n    }\n  }\n\n  scrollCategory(id) {\n    const { list } = this.state;\n    const { index } = list.filter(({ content, header }) => content === id && header)[0];\n    this.flatListRef.scrollToIndex({ animated: true, index });\n    this.setState({ activeIndex: index });\n  }\n\n  selectEmoji(emoji, name, data) {\n    const { onSelect } = this.props;\n    this.randomColor();\n    Keyboard.dismiss();\n    onSelect(emoji, name, data);\n  }\n\n  render() {\n    const { data, i18n } = this.props;\n    const {\n      list, stickyHeaderIndices, randomColor, activeIndex,\n    } = this.state;\n    const categoryKeys = Object.keys(i18n.categories);\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          ref={(ref) => { this.flatListRef = ref; }}\n          viewabilityConfig={{\n            waitForInteraction: true,\n            viewAreaCoveragePercentThreshold: 10,\n          }}\n          onScrollToIndexFailed={() => {}}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          keyboardShouldPersistTaps=\"handled\"\n          style={{ flex: 1 }}\n          stickyHeaderIndices={stickyHeaderIndices}\n          data={list}\n          keyExtractor={this._keyExtractor}\n          renderItem={({\n            item: {\n              content, header, custom,\n            },\n          }) => {\n            if (header) {\n              return (\n                <View style={style.categoryHeader}>\n                  <Text style={style.categoryHeaderText}>{i18n.categories[content]}</Text>\n                </View>\n              );\n            }\n            return (\n              <View style={style.categoryContent}>\n                {content.map((name) => {\n                  const emoji = custom ? name.imageUrl : charFromUtf16(data.emojis[name].unified);\n                  return (\n                    <TouchableHighlight\n                      underlayColor={randomColor}\n                      onPress={() => this.selectEmoji(emoji, name, data.emojis[name])}\n                      onLongPress={this.randomColor}\n                      style={[style.categoryEmojiWrapper]}\n                      key={emoji}\n                    >\n                      {custom\n                        ? (\n                          <Image\n                            source={{ uri: emoji }}\n                            style={style.categoryEmojiImage}\n                          />\n                        )\n                        : (\n                          <Text\n                            style={style.categoryEmojiText}\n                          >\n                            {emoji}\n                          </Text>\n                        )}\n                    </TouchableHighlight>\n                  );\n                })}\n              </View>\n            );\n          }}\n        />\n        <View style={style.bottomPicker}>\n          {categoryKeys.map((id, index) => {\n            const active = index === Math.floor(activeIndex / 2);\n            return (\n              <TouchableHighlight\n                underlayColor=\"#ffffff\"\n                onPress={() => this.scrollCategory(id)}\n                style={[style.category, active && { borderTopWidth: 3, borderColor: 'green' }]}\n                key={id}\n              >\n                <Ionicons name={icons[id]} style={[style.categoryIcon, active && { color: 'green' }]} />\n              </TouchableHighlight>\n            );\n          })}\n        </View>\n      </View>\n    );\n  }\n}\n\nCategoryContent.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  categories: PropTypes.array.isRequired,\n  i18n: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default CategoryContent;\n","/* eslint-disable no-restricted-syntax */\nimport React from 'react';\nimport {\n  KeyboardAvoidingView, Platform, Modal, SafeAreaView,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport SearchBar from './search-bar';\nimport SearchContent from './search-content';\n\nimport emojiData from '../../../data/all.json';\nimport { deepMerge } from '../../utils';\nimport { uncompress } from '../../utils/data';\n\nimport style from './style';\nimport CategoryContent from './category-content';\nimport { addEmoji } from '../../utils/store';\n\nconst I18N = {\n  search: 'Search',\n  notFound: 'No Emoji Found Matching',\n  categories: {\n    recent: 'Frequently Used',\n    people: 'People',\n    nature: 'Nature',\n    foods: 'Foods',\n    activity: 'Activity',\n    places: 'Places',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags',\n    custom: 'Custom',\n  },\n};\n\nclass PickerModal extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      data, custom, i18n,\n    } = props;\n\n    this.customCategory = { id: 'custom', name: 'Custom', emojis: null };\n\n    if (data.compressed) {\n      uncompress(data);\n    }\n\n    this.data = data;\n    this.i18n = deepMerge(I18N, i18n);\n\n    this.categories = [];\n    const allCategories = [].concat(this.data.categories);\n\n    if (custom.length) {\n      this.customCategory.emojis = custom.map(emoji => ({\n        ...emoji,\n        id: emoji.short_names[0],\n        custom: true,\n      }));\n      allCategories.push(this.customCategory);\n    }\n\n    for (const category of allCategories) {\n      this.categories.push(category);\n    }\n\n    this.state = {\n      searchText: null,\n    };\n  }\n\n  filter = searchText => this.setState({ searchText })\n\n  _keyExtractor = item => item;\n\n  closeModal = () => {\n    const { close } = this.props;\n    this.setState({ searchText: null }, () => close());\n  }\n\n  selectEmoji = async (emoji, name, data) => {\n    const { onSelect } = this.props;\n    onSelect(emoji, name, data);\n    this.closeModal();\n    await addEmoji(name);\n  }\n\n  render() {\n    const {\n      visible,\n      onShow,\n      onClose,\n      animationType,\n      presentationStyle,\n    } = this.props;\n    const { searchText } = this.state;\n    const trimmedText = searchText && searchText.replace(/:/g, '');\n    const filteredEmojis = Object.keys(this.data.emojis)\n      .filter(key => key.includes(trimmedText && trimmedText.toLowerCase()));\n    return (\n      <Modal\n        visible={visible}\n        onShow={onShow}\n        onDismiss={onClose}\n        onRequestClose={onClose}\n        animationType={animationType}\n        presentationStyle={presentationStyle}\n        transparent={false}\n      >\n        <SafeAreaView style={style.container}>\n          <KeyboardAvoidingView style={style.container} behavior={Platform.OS === 'ios' && 'padding'} enabled>\n            <SearchBar onChangeText={this.filter} cancel={this.closeModal} />\n            {searchText\n              ? (\n                <SearchContent\n                  onSelect={this.selectEmoji}\n                  emojis={filteredEmojis}\n                  data={this.data}\n                  i18n={this.i18n}\n                  searchText={searchText}\n                />\n              ) : (\n                <CategoryContent\n                  onSelect={this.selectEmoji}\n                  close={this.closeModal}\n                  categories={this.categories}\n                  i18n={this.i18n}\n                  data={this.data}\n                />\n              )}\n          </KeyboardAvoidingView>\n        </SafeAreaView>\n      </Modal>\n    );\n  }\n}\n\nPickerModal.defaultProps = {\n  data: emojiData,\n  custom: [{\n    name: 'Octocat',\n    short_names: ['octocat'],\n    text: '',\n    emoticons: [],\n    keywords: ['github'],\n    imageUrl: 'https://octodex.github.com/images/Sentrytocat_octodex.jpg',\n  }],\n  i18n: {},\n  // set: 'native',\n  onShow: () => {},\n  onClose: () => {},\n  animationType: 'slide',\n  presentationStyle: 'fullScreen',\n};\n\nPickerModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  data: PropTypes.object,\n  custom: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      short_names: PropTypes.arrayOf(PropTypes.string).isRequired,\n      emoticons: PropTypes.arrayOf(PropTypes.string),\n      keywords: PropTypes.arrayOf(PropTypes.string),\n      imageUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  i18n: PropTypes.object,\n  // set: PropTypes.oneOf(\n  // ['native', 'apple', 'google', 'twitter', 'emojione', 'messenger', 'facebook']\n  // ),\n  onShow: PropTypes.func,\n  onClose: PropTypes.func,\n  animationType: PropTypes.string,\n  presentationStyle: PropTypes.string,\n};\n\nexport default PickerModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View, TouchableHighlight, Text,\n} from 'react-native';\nimport EntypoIcons from 'react-native-vector-icons/Entypo';\n\nimport PickerModal from './picker-modal';\n\nimport style from './style';\n\nclass Picker extends React.Component {\n  state = {\n    visible: false,\n  }\n\n  closeModal = () => this.setState({ visible: false })\n\n  openModal = () => this.setState({ visible: true })\n\n  render() {\n    const { visible } = this.state;\n    const {\n      emojiList,\n      updateEmoji,\n      onSelect,\n      data,\n      custom,\n      i18n,\n      onShow,\n      onClose,\n      animationType,\n      presentationStyle,\n      addIcon,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <View style={style.wrapper}>\n          {emojiList.map(({ emoji, name, index, selected }) => (\n            <TouchableHighlight\n              underlayColor=\"#ffffff\"\n              onPress={() => updateEmoji(emoji, name, index)}\n              key={name}\n            >\n              <View style={[style.picker, style.emojiPicker, selected ? style.emojiPickerSelected : null]}>\n                <Text style={style.emoji}>{`${emoji} ${index}`}</Text>\n              </View>\n            </TouchableHighlight>\n          ))}\n          <TouchableHighlight\n            underlayColor=\"#ffffff\"\n            onPress={this.openModal}\n          >\n            <View style={style.picker}>\n              { addIcon || <EntypoIcons name=\"emoji-happy\" style={style.pickerIcon} /> }\n            </View>\n          </TouchableHighlight>\n        </View>\n        <PickerModal\n          onSelect={onSelect}\n          close={this.closeModal}\n          visible={visible}\n          data={data}\n          custom={custom}\n          i18n={i18n}\n          onShow={onShow}\n          onDismiss={onClose}\n          onRequestClose={onClose}\n          animationType={animationType}\n          presentationStyle={presentationStyle}\n          transparent={false}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nPicker.defaultProps = {\n  custom: [{\n    name: 'Octocat',\n    short_names: ['octocat'],\n    text: '',\n    emoticons: [],\n    keywords: ['github'],\n    imageUrl: 'https://octodex.github.com/images/Sentrytocat_octodex.jpg',\n  }],\n  i18n: {},\n  // set: 'native',\n  onShow: () => {},\n  onClose: () => {},\n  animationType: 'slide',\n  presentationStyle: 'fullScreen',\n  addIcon: null,\n};\n\nPicker.propTypes = {\n  emojiList: PropTypes.array.isRequired,\n  updateEmoji: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  data: PropTypes.object,\n  custom: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      short_names: PropTypes.arrayOf(PropTypes.string).isRequired,\n      emoticons: PropTypes.arrayOf(PropTypes.string),\n      keywords: PropTypes.arrayOf(PropTypes.string),\n      imageUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  i18n: PropTypes.object,\n  // set: PropTypes.oneOf(\n  // ['native', 'apple', 'google', 'twitter', 'emojione', 'messenger', 'facebook']\n  // ),\n  onShow: PropTypes.func,\n  onClose: PropTypes.func,\n  animationType: PropTypes.string,\n  presentationStyle: PropTypes.string,\n  addIcon: PropTypes.node,\n};\n\nexport default Picker;\n"],"names":["Dimensions","get","width","StyleSheet","create","container","flex","wrapper","flexDirection","flexWrap","picker","marginBottom","marginRight","height","alignItems","justifyContent","emojiPicker","borderRadius","borderWidth","borderColor","backgroundColor","emojiPickerSelected","emoji","marginHorizontal","fontSize","fontWeight","color","pickerIcon","searchBarWrapper","minHeight","paddingHorizontal","searchIcon","searchBarInput","cancel","categoryWrapper","title","emojiWrapper","searchRow","marginLeft","borderBottomWidth","borderBottomColor","searchEmoji","paddingRight","searchEmojiText","emptySearchWrapper","emptySearchText","categoryHeader","paddingVertical","categoryHeaderText","categoryContent","categoryEmojiWrapper","categoryEmojiText","marginVertical","categoryEmojiImage","resizeMode","bottomPicker","borderTopWidth","borderTopColor","category","categoryIcon","SearchBar","onChangeText","placeholder","placeholderTextColor","View","style","TextInput","TouchableOpacity","Text","defaultProps","propTypes","PropTypes","func","isRequired","string","charFromUtf16","utf16","String","fromCodePoint","split","map","u","deepMerge","a","b","o","key","originalValue","value","hasOwnProperty","SearchContent","onSelect","emojis","data","i18n","searchText","length","notFound","ScrollView","filteredEmoji","unified","TouchableHighlight","Keyboard","dismiss","array","object","mapping","name","non_qualified","has_img_apple","has_img_google","has_img_twitter","has_img_emojione","has_img_facebook","has_img_messenger","keywords","sheet","emoticons","text","short_names","added_in","buildSearch","search","addToSearch","strings","Array","isArray","forEach","s","toLowerCase","indexOf","push","join","uncompress","compressed","id","unshift","sheet_x","sheet_y","toFixed","DEFAULTS","KEY","MAX_RECENT_LENGTH","items","initialized","init","AsyncStorage","getItem","storageItems","setItem","JSON","stringify","parse","addEmoji","updatedArray","emojiIndex","splice","slice","getEmoji","colors","icons","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","CategoryContent","props","item","index","Math","floor","random","setState","randomColor","viewableItems","activeIndex","flatListRef","React","createRef","state","list","stickyHeaderIndices","componentDidMount","stickyIndex","categories","categoryKeys","Object","keys","recentCategory","filter","recentEmojis","filteredValues","content","header","scrollCategory","scrollToIndex","animated","selectEmoji","render","FlatList","ref","waitForInteraction","viewAreaCoveragePercentThreshold","onViewableItemsChanged","_keyExtractor","imageUrl","Image","uri","active","Component","I18N","PickerModal","close","closeModal","customCategory","allCategories","concat","visible","onShow","onClose","animationType","presentationStyle","trimmedText","replace","filteredEmojis","includes","Modal","SafeAreaView","KeyboardAvoidingView","Platform","OS","emojiData","bool","arrayOf","shape","Picker","emojiList","updateEmoji","addIcon","selected","openModal","node"],"mappings":"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"}