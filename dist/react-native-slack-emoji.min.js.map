{"version":3,"file":"react-native-slack-emoji.min.js","sources":["../src/components/picker/style.js","../src/components/picker/search-bar.js","../src/utils/index.js","../src/components/picker/search-content.js","../src/utils/store.js","../src/utils/data.js","../src/components/picker/category-content.js","../src/components/picker/picker-modal.js","../src/components/picker/index.js"],"sourcesContent":["import { StyleSheet, Dimensions } from 'react-native';\n\nconst { width } = Dimensions.get('window');\n\nexport default StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  picker: {\n    marginBottom: 5,\n    marginRight: 7,\n    height: 30,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  emojiPicker: {\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: '#E9E7E7',\n    flexDirection: 'row',\n    backgroundColor: '#E9E7E7',\n  },\n  emojiPickerSelected: {\n    backgroundColor: '#D8E3EF',\n    borderColor: '#499CF4',\n  },\n  emoji: {\n    marginHorizontal: 10,\n    fontSize: 14,\n    fontWeight: '500',\n    color: '#0063a8',\n  },\n  pickerIcon: {\n    marginHorizontal: 15,\n    fontSize: 16,\n    color: '#5f5f5f',\n  },\n  searchBarWrapper: {\n    flex: 0.1,\n    minHeight: 30,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n  },\n  searchIcon: {\n    width: 20,\n    height: 20,\n    fontSize: 20,\n    color: '#888888',\n  },\n  searchBarInput: {\n    fontSize: 14,\n    flex: 1,\n  },\n  cancel: {\n    paddingHorizontal: 5,\n    fontSize: 16,\n    color: '#5f5f5f',\n  },\n  categoryWrapper: {\n    flex: 0.8,\n    paddingHorizontal: 10,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#b7b7b7',\n  },\n  emojiWrapper: {\n    flexWrap: 'wrap',\n  },\n  searchRow: {\n    marginLeft: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 40,\n    borderBottomWidth: 0.3,\n    borderBottomColor: '#b7b7b7',\n  },\n  searchEmoji: {\n    paddingRight: 10,\n    fontSize: 14,\n  },\n  searchEmojiText: {\n    fontSize: 14,\n    color: '#939393',\n    fontWeight: '600',\n    paddingRight: 25,\n  },\n  emptySearchWrapper: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 30,\n  },\n  emptySearchText: {\n    fontSize: 16,\n    color: '#b7b7b7',\n  },\n  categoryHeader: {\n    flexDirection: 'column',\n    backgroundColor: '#ffffff',\n    justifyContent: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n  },\n  categoryHeaderText: {\n    fontWeight: '600',\n    fontSize: 14,\n    color: '#939393',\n  },\n  categoryContent: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  categoryEmojiWrapper: {\n    borderRadius: 10,\n  },\n  categoryEmojiText: {\n    marginHorizontal: 6,\n    marginVertical: 5,\n    fontSize: 30,\n  },\n  categoryEmojiImage: {\n    marginHorizontal: 6,\n    marginVertical: 5,\n    resizeMode: 'contain',\n    height: 30,\n    width: 30,\n  },\n  bottomPicker: {\n    height: 50,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    borderTopWidth: 0.05,\n    borderTopColor: '#b7b7b7',\n  },\n  category: {\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: width / 10,\n  },\n  categoryIcon: {\n    fontSize: 30,\n    color: '#888888',\n  },\n});\n","import React from 'react';\nimport {\n  View, TextInput, TouchableOpacity, Text,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport style from './style';\n\nfunction SearchBar({\n  onChangeText, placeholder, placeholderTextColor, cancel,\n}) {\n  return (\n    <View style={style.searchBarWrapper}>\n      <Ionicons name=\"ios-search\" style={style.searchIcon} />\n      <TextInput\n        autoFocus\n        style={style.searchBarInput}\n        onChangeText={onChangeText}\n        placeholder={placeholder}\n        placeholderTextColor={placeholderTextColor}\n      />\n      <TouchableOpacity onPress={cancel}>\n        <Text style={style.cancel}>Cancel</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nSearchBar.defaultProps = {\n  placeholder: 'Search',\n  placeholderTextColor: '#b7b7b7',\n};\n\nSearchBar.propTypes = {\n  onChangeText: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  cancel: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","/*eslint-disable*/\nconst charFromUtf16 = utf16 => String.fromCodePoint(...utf16.split('-').map(u => `0x${u}`));\n\nfunction deepMerge(a, b) {\n  const o = {};\n\n  for (const key in a) {\n    const originalValue = a[key];\n\n\n    let value = originalValue;\n\n    if (b.hasOwnProperty(key)) {\n      value = b[key];\n    }\n\n    if (typeof value === 'object') {\n      value = deepMerge(originalValue, value);\n    }\n\n    o[key] = value;\n  }\n\n  return o;\n}\n\nexport {\n  charFromUtf16,\n  deepMerge,\n};\n","import React from 'react';\nimport {\n  ScrollView, Text, TouchableHighlight, View,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport { charFromUtf16 } from '../../utils';\n\nimport style from './style';\n\nfunction SearchContent({\n  onSelect, emojis, data, i18n, searchText,\n}) {\n  if (!emojis.length) {\n    return (\n      <View style={style.emptySearchWrapper}>\n        <Text style={style.emptySearchText}>{i18n.notFound}</Text>\n        <Text style={[style.emptySearchText, { fontWeight: '600' }]}>{`\"${searchText}\"`}</Text>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView keyboardShouldPersistTaps=\"always\" style={{ flex: 0.8 }}>\n      {emojis.map((filteredEmoji) => {\n        const emoji = charFromUtf16(data.emojis[filteredEmoji].unified);\n        return (\n          <TouchableHighlight\n            key={filteredEmoji}\n            underlayColor=\"blue\"\n            onPress={() => onSelect(emoji, filteredEmoji, data.emojis[filteredEmoji])}\n          >\n            <View style={style.searchRow}>\n              <Text style={style.searchEmoji}>{emoji}</Text>\n              <Text style={style.searchEmojiText} numberOfLines={1}>\n                {`:${filteredEmoji}:`}\n              </Text>\n            </View>\n          </TouchableHighlight>\n        );\n      })}\n    </ScrollView>\n  );\n}\n\nSearchContent.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  emojis: PropTypes.array.isRequired,\n  data: PropTypes.object.isRequired,\n  i18n: PropTypes.object.isRequired,\n  searchText: PropTypes.string.isRequired,\n};\n\nexport default SearchContent;\n","import { AsyncStorage } from 'react-native';\n\nconst DEFAULTS = [\n  '+1',\n  'grinning',\n  'kissing_heart',\n  'heart_eyes',\n  'laughing',\n  'stuck_out_tongue_winking_eye',\n  'sweat_smile',\n  'joy',\n  'scream',\n  'disappointed',\n  'unamused',\n  'weary',\n  'sob',\n  'sunglasses',\n  'heart',\n];\n\nconst KEY = 'react-native-slack-emoji/RECENT';\n\nconst MAX_RECENT_LENGTH = 15;\n\nlet items; let\n  initialized;\n\nasync function init() {\n  initialized = true;\n  const storageItems = await AsyncStorage.getItem(KEY);\n  if (!storageItems) {\n    items = DEFAULTS;\n    await AsyncStorage.setItem(KEY, JSON.stringify(items));\n  } else {\n    items = JSON.parse(storageItems);\n  }\n}\n\nasync function addEmoji(emoji) {\n  if (!initialized) {\n    await init();\n  }\n  const updatedArray = [...items];\n  const emojiIndex = updatedArray.indexOf(emoji);\n  if (emojiIndex !== -1) {\n    updatedArray.unshift(updatedArray.splice(emojiIndex, 1)[0]);\n  } else {\n    updatedArray.unshift(emoji);\n  }\n  items = updatedArray.slice(0, MAX_RECENT_LENGTH);\n  await AsyncStorage.setItem(KEY, JSON.stringify(items));\n  return items;\n}\n\nasync function getEmoji() {\n  if (!initialized) {\n    await init();\n  }\n  return items;\n}\n\nexport { addEmoji, getEmoji };\n","/* eslint-disable */\nconst mapping = {\n  name: 'a',\n  unified: 'b',\n  non_qualified: 'c',\n  has_img_apple: 'd',\n  has_img_google: 'e',\n  has_img_twitter: 'f',\n  has_img_emojione: 'g',\n  has_img_facebook: 'h',\n  has_img_messenger: 'i',\n  keywords: 'j',\n  sheet: 'k',\n  emoticons: 'l',\n  text: 'm',\n  short_names: 'n',\n  added_in: 'o',\n};\n\nconst buildSearch = (emoji) => {\n  const search = [];\n\n  const addToSearch = (strings, split) => {\n    if (!strings) {\n      return;\n    }\n\n    (Array.isArray(strings) ? strings : [strings]).forEach((string) => {\n      (split ? string.split(/[-|_|\\s]+/) : [string]).forEach((s) => {\n        s = s.toLowerCase();\n\n        if (search.indexOf(s) === -1) {\n          search.push(s);\n        }\n      });\n    });\n  };\n\n  addToSearch(emoji.short_names, true);\n  addToSearch(emoji.name, true);\n  addToSearch(emoji.keywords, false);\n  addToSearch(emoji.emoticons, false);\n\n  return search.join(',');\n};\n\nconst uncompress = (data) => {\n  data.compressed = false;\n\n  for (const id in data.emojis) {\n    const emoji = data.emojis[id];\n\n    for (const key in mapping) {\n      emoji[key] = emoji[mapping[key]];\n      delete emoji[mapping[key]];\n    }\n\n    if (!emoji.short_names) emoji.short_names = [];\n    emoji.short_names.unshift(id);\n\n    emoji.sheet_x = emoji.sheet[0];\n    emoji.sheet_y = emoji.sheet[1];\n    delete emoji.sheet;\n\n    if (!emoji.text) emoji.text = '';\n\n    if (!emoji.added_in) emoji.added_in = 6;\n    emoji.added_in = emoji.added_in.toFixed(1);\n\n    emoji.search = buildSearch(emoji);\n  }\n};\n\nexport { buildSearch, uncompress };\n","/* eslint-disable no-restricted-syntax */\nimport React from 'react';\nimport {\n  FlatList, Image, Text, TouchableHighlight, View,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nimport { charFromUtf16 } from '../../utils';\n\nimport style from './style';\nimport { getEmoji } from '../../utils/store';\n\nconst colors = ['#fabfff', '#aee0ff', '#abe981', '#f8ef55'];\n\nconst icons = {\n  recent: 'ios-timer',\n  people: 'ios-happy',\n  nature: 'ios-leaf',\n  foods: 'ios-beaker',\n  activity: 'ios-american-football',\n  places: 'ios-airplane',\n  objects: 'ios-bulb',\n  symbols: 'ios-heart-empty',\n  flags: 'ios-flag',\n  custom: 'ios-code',\n};\n\nclass CategoryContent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.flatListRef = React.createRef();\n    this.state = {\n      list: [],\n      stickyHeaderIndices: [],\n      randomColor: colors[0],\n      activeIndex: 0,\n    };\n  }\n\n  async componentDidMount() {\n    let stickyIndex = 0;\n    const list = [];\n    const stickyHeaderIndices = [];\n    const { categories, i18n } = this.props;\n    const categoryKeys = Object.keys(i18n.categories);\n\n    let recentCategory = categories.filter(({ id }) => id === 'recent')[0];\n    const recentEmojis = await getEmoji();\n    if (recentCategory) {\n      recentCategory.emojis = recentEmojis;\n    } else {\n      recentCategory = { id: 'recent', name: 'Recent', emojis: recentEmojis };\n    }\n    categories.push(recentCategory);\n\n    for (const value of categoryKeys) {\n      const filteredValues = categories.filter(({ id }) => id === value)[0];\n      const emojis = filteredValues ? filteredValues.emojis : [];\n      const custom = value === 'custom';\n      list.push({\n        content: value, header: true, index: stickyIndex, custom,\n      });\n      list.push({\n        content: emojis, header: false, index: stickyIndex + 1, custom,\n      });\n      stickyHeaderIndices.push(stickyIndex);\n\n      stickyIndex += 2;\n    }\n    this.setState({ list, stickyHeaderIndices });\n  }\n\n  _keyExtractor = (item, index) => `${item.index} + ${index}`;\n\n  randomColor = () => {\n    const index = Math.floor(colors.length * Math.random());\n    this.setState({ randomColor: colors[index] });\n  }\n\n  onViewableItemsChanged = ({ viewableItems }) => {\n    if (viewableItems.length) {\n      const { index } = viewableItems[0];\n      if (index % 2 === 0) {\n        this.setState({ activeIndex: index });\n      }\n    }\n  }\n\n  scrollCategory(id) {\n    const { list } = this.state;\n    const { index } = list.filter(({ content, header }) => content === id && header)[0];\n    this.flatListRef.scrollToIndex({ animated: true, index });\n    this.setState({ activeIndex: index });\n  }\n\n  selectEmoji(emoji, name, data) {\n    const { onSelect } = this.props;\n    this.randomColor();\n    onSelect(emoji, name, data);\n  }\n\n  render() {\n    const { data, i18n } = this.props;\n    const {\n      list, stickyHeaderIndices, randomColor, activeIndex,\n    } = this.state;\n    const categoryKeys = Object.keys(i18n.categories);\n    return (\n      <View style={{ flex: 1 }}>\n        <FlatList\n          ref={(ref) => { this.flatListRef = ref; }}\n          viewabilityConfig={{\n            waitForInteraction: true,\n            viewAreaCoveragePercentThreshold: 10,\n          }}\n          onScrollToIndexFailed={() => {}}\n          onViewableItemsChanged={this.onViewableItemsChanged}\n          keyboardShouldPersistTaps=\"always\"\n          style={{ flex: 1 }}\n          stickyHeaderIndices={stickyHeaderIndices}\n          data={list}\n          keyExtractor={this._keyExtractor}\n          renderItem={({\n            item: {\n              content, header, custom,\n            },\n          }) => {\n            if (header) {\n              return (\n                <View style={style.categoryHeader}>\n                  <Text style={style.categoryHeaderText}>{i18n.categories[content]}</Text>\n                </View>\n              );\n            }\n            return (\n              <View style={style.categoryContent}>\n                {content.map((name) => {\n                  const emoji = custom ? name.imageUrl : charFromUtf16(data.emojis[name].unified);\n                  return (\n                    <TouchableHighlight\n                      underlayColor={randomColor}\n                      onPress={() => this.selectEmoji(emoji, name, data.emojis[name])}\n                      onLongPress={this.randomColor}\n                      style={[style.categoryEmojiWrapper]}\n                      key={emoji}\n                    >\n                      {custom\n                        ? (\n                          <Image\n                            source={{ uri: emoji }}\n                            style={style.categoryEmojiImage}\n                          />\n                        )\n                        : (\n                          <Text\n                            style={style.categoryEmojiText}\n                          >\n                            {emoji}\n                          </Text>\n                        )}\n                    </TouchableHighlight>\n                  );\n                })}\n              </View>\n            );\n          }}\n        />\n        <View style={style.bottomPicker}>\n          {categoryKeys.map((id, index) => {\n            const active = index === Math.floor(activeIndex / 2);\n            return (\n              <TouchableHighlight\n                underlayColor=\"#ffffff\"\n                onPress={() => this.scrollCategory(id)}\n                style={[style.category, active && { borderTopWidth: 3, borderColor: 'green' }]}\n                key={id}\n              >\n                <Ionicons name={icons[id]} style={[style.categoryIcon, active && { color: 'green' }]} />\n              </TouchableHighlight>\n            );\n          })}\n        </View>\n      </View>\n    );\n  }\n}\n\nCategoryContent.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  categories: PropTypes.array.isRequired,\n  i18n: PropTypes.object.isRequired,\n  data: PropTypes.object.isRequired,\n};\n\nexport default CategoryContent;\n","/* eslint-disable no-restricted-syntax */\nimport React from 'react';\nimport {\n  KeyboardAvoidingView, Platform, Modal, SafeAreaView,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nimport SearchBar from './search-bar';\nimport SearchContent from './search-content';\n\nimport emojiData from '../../../data/all.json';\nimport { deepMerge } from '../../utils';\nimport { uncompress } from '../../utils/data';\n\nimport style from './style';\nimport CategoryContent from './category-content';\nimport { addEmoji } from '../../utils/store';\n\nconst I18N = {\n  search: 'Search',\n  notFound: 'No Emoji Found Matching',\n  categories: {\n    recent: 'Frequently Used',\n    people: 'People',\n    nature: 'Nature',\n    foods: 'Foods',\n    activity: 'Activity',\n    places: 'Places',\n    objects: 'Objects',\n    symbols: 'Symbols',\n    flags: 'Flags',\n    custom: 'Custom',\n  },\n};\n\nclass PickerModal extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      data, custom, i18n,\n    } = props;\n\n    this.customCategory = { id: 'custom', name: 'Custom', emojis: null };\n\n    if (data.compressed) {\n      uncompress(data);\n    }\n\n    this.data = data;\n    this.i18n = deepMerge(I18N, i18n);\n\n    this.categories = [];\n    const allCategories = [].concat(this.data.categories);\n\n    if (custom.length) {\n      this.customCategory.emojis = custom.map(emoji => ({\n        ...emoji,\n        id: emoji.short_names[0],\n        custom: true,\n      }));\n      allCategories.push(this.customCategory);\n    }\n\n    for (const category of allCategories) {\n      this.categories.push(category);\n    }\n\n    this.state = {\n      searchText: null,\n    };\n  }\n\n  filter = searchText => this.setState({ searchText })\n\n  _keyExtractor = item => item;\n\n  closeModal = () => {\n    const { close } = this.props;\n    this.setState({ searchText: null }, () => close());\n  }\n\n  selectEmoji = async (emoji, name, data) => {\n    const { onSelect } = this.props;\n    onSelect(emoji, name, data);\n    this.closeModal();\n    await addEmoji(name);\n  }\n\n  render() {\n    const {\n      visible,\n      onShow,\n      onClose,\n      animationType,\n      presentationStyle,\n    } = this.props;\n    const { searchText } = this.state;\n    const trimmedText = searchText && searchText.replace(/:/g, '');\n    const filteredEmojis = Object.keys(this.data.emojis)\n      .filter(key => key.includes(trimmedText && trimmedText.toLowerCase()));\n    return (\n      <Modal\n        visible={visible}\n        onShow={onShow}\n        onDismiss={onClose}\n        onRequestClose={onClose}\n        animationType={animationType}\n        presentationStyle={presentationStyle}\n        transparent={false}\n      >\n        <SafeAreaView style={style.container}>\n          <KeyboardAvoidingView style={style.container} behavior={Platform.OS === 'ios' && 'padding'} enabled>\n            <SearchBar onChangeText={this.filter} cancel={this.closeModal} />\n            {searchText\n              ? (\n                <SearchContent\n                  onSelect={this.selectEmoji}\n                  emojis={filteredEmojis}\n                  data={this.data}\n                  i18n={this.i18n}\n                  searchText={searchText}\n                />\n              ) : (\n                <CategoryContent\n                  onSelect={this.selectEmoji}\n                  close={this.closeModal}\n                  categories={this.categories}\n                  i18n={this.i18n}\n                  data={this.data}\n                />\n              )}\n          </KeyboardAvoidingView>\n        </SafeAreaView>\n      </Modal>\n    );\n  }\n}\n\nPickerModal.defaultProps = {\n  data: emojiData,\n  custom: [{\n    name: 'Octocat',\n    short_names: ['octocat'],\n    text: '',\n    emoticons: [],\n    keywords: ['github'],\n    imageUrl: 'https://octodex.github.com/images/Sentrytocat_octodex.jpg',\n  }],\n  i18n: {},\n  // set: 'native',\n  onShow: () => {},\n  onClose: () => {},\n  animationType: 'slide',\n  presentationStyle: 'fullScreen',\n};\n\nPickerModal.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  close: PropTypes.func.isRequired,\n  data: PropTypes.object,\n  custom: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      short_names: PropTypes.arrayOf(PropTypes.string).isRequired,\n      emoticons: PropTypes.arrayOf(PropTypes.string),\n      keywords: PropTypes.arrayOf(PropTypes.string),\n      imageUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  i18n: PropTypes.object,\n  // set: PropTypes.oneOf(\n  // ['native', 'apple', 'google', 'twitter', 'emojione', 'messenger', 'facebook']\n  // ),\n  onShow: PropTypes.func,\n  onClose: PropTypes.func,\n  animationType: PropTypes.string,\n  presentationStyle: PropTypes.string,\n};\n\nexport default PickerModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View, TouchableHighlight, Text,\n} from 'react-native';\nimport EntypoIcons from 'react-native-vector-icons/Entypo';\n\nimport PickerModal from './picker-modal';\n\nimport style from './style';\n\nclass Picker extends React.Component {\n  state = {\n    visible: false,\n  }\n\n  closeModal = () => this.setState({ visible: false })\n\n  openModal = () => this.setState({ visible: true })\n\n  render() {\n    const { visible } = this.state;\n    const {\n      emojiList,\n      updateEmoji,\n      onSelect,\n      data,\n      custom,\n      i18n,\n      onShow,\n      onClose,\n      animationType,\n      presentationStyle,\n      addIcon,\n    } = this.props;\n    return (\n      <React.Fragment>\n        <View style={style.wrapper}>\n          {emojiList.map(({ emoji, name, index, selected }) => (\n            <TouchableHighlight\n              underlayColor=\"#ffffff\"\n              onPress={() => updateEmoji(emoji, name, index)}\n              key={name}\n            >\n              <View style={[style.picker, style.emojiPicker, selected ? style.emojiPickerSelected : null]}>\n                <Text style={style.emoji}>{`${emoji} ${index}`}</Text>\n              </View>\n            </TouchableHighlight>\n          ))}\n          <TouchableHighlight\n            underlayColor=\"#ffffff\"\n            onPress={this.openModal}\n          >\n            <View style={style.picker}>\n              { addIcon || <EntypoIcons name=\"emoji-happy\" style={style.pickerIcon} /> }\n            </View>\n          </TouchableHighlight>\n        </View>\n        <PickerModal\n          onSelect={onSelect}\n          close={this.closeModal}\n          visible={visible}\n          data={data}\n          custom={custom}\n          i18n={i18n}\n          onShow={onShow}\n          onDismiss={onClose}\n          onRequestClose={onClose}\n          animationType={animationType}\n          presentationStyle={presentationStyle}\n          transparent={false}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nPicker.defaultProps = {\n  custom: [{\n    name: 'Octocat',\n    short_names: ['octocat'],\n    text: '',\n    emoticons: [],\n    keywords: ['github'],\n    imageUrl: 'https://octodex.github.com/images/Sentrytocat_octodex.jpg',\n  }],\n  i18n: {},\n  // set: 'native',\n  onShow: () => {},\n  onClose: () => {},\n  animationType: 'slide',\n  presentationStyle: 'fullScreen',\n  addIcon: null,\n};\n\nPicker.propTypes = {\n  emojiList: PropTypes.array.isRequired,\n  updateEmoji: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n  data: PropTypes.object,\n  custom: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      short_names: PropTypes.arrayOf(PropTypes.string).isRequired,\n      emoticons: PropTypes.arrayOf(PropTypes.string),\n      keywords: PropTypes.arrayOf(PropTypes.string),\n      imageUrl: PropTypes.string.isRequired,\n    }),\n  ),\n  i18n: PropTypes.object,\n  // set: PropTypes.oneOf(\n  // ['native', 'apple', 'google', 'twitter', 'emojione', 'messenger', 'facebook']\n  // ),\n  onShow: PropTypes.func,\n  onClose: PropTypes.func,\n  animationType: PropTypes.string,\n  presentationStyle: PropTypes.string,\n  addIcon: PropTypes.node,\n};\n\nexport default Picker;\n"],"names":["width","Dimensions","get","StyleSheet","create","container","flex","wrapper","flexDirection","flexWrap","picker","marginBottom","marginRight","height","alignItems","justifyContent","emojiPicker","borderRadius","borderWidth","borderColor","backgroundColor","emojiPickerSelected","emoji","marginHorizontal","fontSize","fontWeight","color","pickerIcon","searchBarWrapper","minHeight","paddingHorizontal","searchIcon","searchBarInput","cancel","categoryWrapper","title","emojiWrapper","searchRow","marginLeft","borderBottomWidth","borderBottomColor","searchEmoji","paddingRight","searchEmojiText","emptySearchWrapper","emptySearchText","categoryHeader","paddingVertical","categoryHeaderText","categoryContent","categoryEmojiWrapper","categoryEmojiText","marginVertical","categoryEmojiImage","resizeMode","bottomPicker","borderTopWidth","borderTopColor","category","categoryIcon","SearchBar","onChangeText","placeholder","placeholderTextColor","React","View","style","Ionicons","name","TextInput","autoFocus","TouchableOpacity","onPress","Text","defaultProps","propTypes","PropTypes","func","isRequired","string","charFromUtf16","utf16","String","fromCodePoint","split","map","u","SearchContent","onSelect","emojis","data","i18n","searchText","length","ScrollView","keyboardShouldPersistTaps","filteredEmoji","unified","TouchableHighlight","key","underlayColor","numberOfLines","notFound","array","object","items","initialized","mapping","non_qualified","has_img_apple","has_img_google","has_img_twitter","has_img_emojione","has_img_facebook","has_img_messenger","keywords","sheet","emoticons","text","short_names","added_in","buildSearch","search","addToSearch","strings","Array","isArray","forEach","s","toLowerCase","indexOf","push","join","uncompress","id","compressed","unshift","sheet_x","sheet_y","toFixed","DEFAULTS","KEY","MAX_RECENT_LENGTH","init","AsyncStorage","getItem","storageItems","setItem","JSON","stringify","parse","addEmoji","updatedArray","emojiIndex","splice","slice","getEmoji","colors","icons","recent","people","nature","foods","activity","places","objects","symbols","flags","custom","CategoryContent","props","item","index","Math","floor","random","setState","randomColor","viewableItems","activeIndex","flatListRef","createRef","state","list","stickyHeaderIndices","componentDidMount","stickyIndex","this","categories","categoryKeys","Object","keys","recentCategory","filter","recentEmojis","value","filteredValues","content","header","scrollCategory","scrollToIndex","animated","selectEmoji","render","FlatList","ref","_this2","viewabilityConfig","waitForInteraction","viewAreaCoveragePercentThreshold","onScrollToIndexFailed","onViewableItemsChanged","keyExtractor","_keyExtractor","renderItem","imageUrl","onLongPress","Image","source","uri","active","Component","I18N","PickerModal","_this","close","closeModal","customCategory","deepMerge","a","b","o","originalValue","hasOwnProperty","allCategories","concat","visible","onShow","onClose","animationType","presentationStyle","trimmedText","replace","filteredEmojis","includes","Modal","onDismiss","onRequestClose","transparent","SafeAreaView","KeyboardAvoidingView","behavior","Platform","OS","enabled","emojiData","bool","arrayOf","shape","Picker","emojiList","updateEmoji","addIcon","Fragment","selected","openModal","EntypoIcons","node"],"mappings":"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"}